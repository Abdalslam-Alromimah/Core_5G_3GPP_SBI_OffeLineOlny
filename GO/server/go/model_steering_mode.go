// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nchf_OfflineOnlyCharging
 *
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.1
 */

package openapi


import (
	"errors"
)



// SteeringMode - Contains the steering mode value and parameters determined by the PCF.
type SteeringMode struct {

	SteerModeValue SteerModeValue `json:"steerModeValue"`

	Active AccessType `json:"active,omitempty"`

	Standby AccessTypeRm `json:"standby,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Var3gLoad int32 `json:"3gLoad,omitempty"`

	PrioAcc AccessType `json:"prioAcc,omitempty"`

	ThresValue *ThresholdValue `json:"thresValue,omitempty"`

	SteerModeInd SteerModeIndicator `json:"steerModeInd,omitempty"`

	Primary AccessTypeRm `json:"primary,omitempty"`
}

// AssertSteeringModeRequired checks if the required fields are not zero-ed
func AssertSteeringModeRequired(obj SteeringMode) error {
	elements := map[string]interface{}{
		"steerModeValue": obj.SteerModeValue,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSteerModeValueRequired(obj.SteerModeValue); err != nil {
		return err
	}
	if err := AssertAccessTypeRmRequired(obj.Standby); err != nil {
		return err
	}
	if obj.ThresValue != nil {
		if err := AssertThresholdValueRequired(*obj.ThresValue); err != nil {
			return err
		}
	}
	if err := AssertSteerModeIndicatorRequired(obj.SteerModeInd); err != nil {
		return err
	}
	if err := AssertAccessTypeRmRequired(obj.Primary); err != nil {
		return err
	}
	return nil
}

// AssertSteeringModeConstraints checks if the values respects the defined constraints
func AssertSteeringModeConstraints(obj SteeringMode) error {
	if obj.Var3gLoad < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
