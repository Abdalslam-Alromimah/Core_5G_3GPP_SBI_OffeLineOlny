// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nchf_OfflineOnlyCharging
 *
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.1
 */

package openapi


import (
	"errors"
)



// AuthorizedDefaultQos - Represents the Authorized Default QoS.
type AuthorizedDefaultQos struct {

	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255. 
	Var5qi int32 `json:"5qi,omitempty"`

	Arp Arp `json:"arp,omitempty"`

	// This data type is defined in the same way as the '5QiPriorityLevel' data type, but with the OpenAPI 'nullable: true' property. 
	PriorityLevel *int32 `json:"priorityLevel,omitempty"`

	// This data type is defined in the same way as the 'AverWindow' data type, but with the OpenAPI 'nullable: true' property. 
	AverWindow *int32 `json:"averWindow,omitempty"`

	// This data type is defined in the same way as the 'MaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property. 
	MaxDataBurstVol *int32 `json:"maxDataBurstVol,omitempty"`

	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	MaxbrUl *string `json:"maxbrUl,omitempty"`

	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	MaxbrDl *string `json:"maxbrDl,omitempty"`

	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	GbrUl *string `json:"gbrUl,omitempty"`

	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	GbrDl *string `json:"gbrDl,omitempty"`

	// This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property. 
	ExtMaxDataBurstVol *int32 `json:"extMaxDataBurstVol,omitempty"`
}

// AssertAuthorizedDefaultQosRequired checks if the required fields are not zero-ed
func AssertAuthorizedDefaultQosRequired(obj AuthorizedDefaultQos) error {
	if err := AssertArpRequired(obj.Arp); err != nil {
		return err
	}
	return nil
}

// AssertAuthorizedDefaultQosConstraints checks if the values respects the defined constraints
func AssertAuthorizedDefaultQosConstraints(obj AuthorizedDefaultQos) error {
	if obj.Var5qi < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Var5qi > 255 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.PriorityLevel != nil && *obj.PriorityLevel < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.PriorityLevel != nil && *obj.PriorityLevel > 127 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.AverWindow != nil && *obj.AverWindow < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.AverWindow != nil && *obj.AverWindow > 4095 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.MaxDataBurstVol != nil && *obj.MaxDataBurstVol < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MaxDataBurstVol != nil && *obj.MaxDataBurstVol > 4095 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.ExtMaxDataBurstVol != nil && *obj.ExtMaxDataBurstVol < 4096 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.ExtMaxDataBurstVol != nil && *obj.ExtMaxDataBurstVol > 2000000 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
