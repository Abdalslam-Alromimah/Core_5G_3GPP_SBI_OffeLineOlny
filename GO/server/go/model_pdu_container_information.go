// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nchf_OfflineOnlyCharging
 *
 * OfflineOnlyCharging Service © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.1
 */

package openapi


import (
	"time"
)



type PduContainerInformation struct {

	// string with format 'date-time' as defined in OpenAPI.
	TimeofFirstUsage time.Time `json:"timeofFirstUsage,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	TimeofLastUsage time.Time `json:"timeofLastUsage,omitempty"`

	QoSInformation *QosData `json:"qoSInformation,omitempty"`

	QoSCharacteristics QosCharacteristics `json:"qoSCharacteristics,omitempty"`

	AFCorrelationInformation string `json:"aFCorrelationInformation,omitempty"`

	UserLocationInformation UserLocation `json:"userLocationInformation,omitempty"`

	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time. 
	UetimeZone string `json:"uetimeZone,omitempty"`

	RATType RatType `json:"rATType,omitempty"`

	ServingNodeID []ServingNetworkFunctionId `json:"servingNodeID,omitempty"`

	PresenceReportingAreaInformation map[string]PresenceInfo `json:"presenceReportingAreaInformation,omitempty"`

	Var3gppPSDataOffStatus Model3GpppsDataOffStatus `json:"3gppPSDataOffStatus,omitempty"`

	SponsorIdentity string `json:"sponsorIdentity,omitempty"`

	ApplicationserviceProviderIdentity string `json:"applicationserviceProviderIdentity,omitempty"`

	ChargingRuleBaseName string `json:"chargingRuleBaseName,omitempty"`

	MAPDUSteeringFunctionality SteeringFunctionality `json:"mAPDUSteeringFunctionality,omitempty"`

	MAPDUSteeringMode SteeringMode `json:"mAPDUSteeringMode,omitempty"`
}

// AssertPduContainerInformationRequired checks if the required fields are not zero-ed
func AssertPduContainerInformationRequired(obj PduContainerInformation) error {
	if obj.QoSInformation != nil {
		if err := AssertQosDataRequired(*obj.QoSInformation); err != nil {
			return err
		}
	}
	if err := AssertQosCharacteristicsRequired(obj.QoSCharacteristics); err != nil {
		return err
	}
	if err := AssertUserLocationRequired(obj.UserLocationInformation); err != nil {
		return err
	}
	if err := AssertRatTypeRequired(obj.RATType); err != nil {
		return err
	}
	for _, el := range obj.ServingNodeID {
		if err := AssertServingNetworkFunctionIdRequired(el); err != nil {
			return err
		}
	}
	if err := AssertModel3GpppsDataOffStatusRequired(obj.Var3gppPSDataOffStatus); err != nil {
		return err
	}
	if err := AssertSteeringFunctionalityRequired(obj.MAPDUSteeringFunctionality); err != nil {
		return err
	}
	if err := AssertSteeringModeRequired(obj.MAPDUSteeringMode); err != nil {
		return err
	}
	return nil
}

// AssertPduContainerInformationConstraints checks if the values respects the defined constraints
func AssertPduContainerInformationConstraints(obj PduContainerInformation) error {
	return nil
}
