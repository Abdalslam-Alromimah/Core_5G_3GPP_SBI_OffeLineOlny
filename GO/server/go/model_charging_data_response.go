// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nchf_OfflineOnlyCharging
 *
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.1
 */

package openapi


import (
	"time"
	"errors"
)



type ChargingDataResponse struct {

	// string with format 'date-time' as defined in OpenAPI.
	InvocationTimeStamp time.Time `json:"invocationTimeStamp"`

	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	InvocationSequenceNumber int32 `json:"invocationSequenceNumber"`

	InvocationResult InvocationResult `json:"invocationResult,omitempty"`

	SessionFailover SessionFailover `json:"sessionFailover,omitempty"`

	Triggers []Trigger `json:"triggers,omitempty"`

	PDUSessionChargingInformation PduSessionChargingInformation `json:"pDUSessionChargingInformation,omitempty"`

	RoamingQBCInformation RoamingQbcInformation `json:"roamingQBCInformation,omitempty"`
}

// AssertChargingDataResponseRequired checks if the required fields are not zero-ed
func AssertChargingDataResponseRequired(obj ChargingDataResponse) error {
	elements := map[string]interface{}{
		"invocationTimeStamp": obj.InvocationTimeStamp,
		"invocationSequenceNumber": obj.InvocationSequenceNumber,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertInvocationResultRequired(obj.InvocationResult); err != nil {
		return err
	}
	if err := AssertSessionFailoverRequired(obj.SessionFailover); err != nil {
		return err
	}
	for _, el := range obj.Triggers {
		if err := AssertTriggerRequired(el); err != nil {
			return err
		}
	}
	if err := AssertPduSessionChargingInformationRequired(obj.PDUSessionChargingInformation); err != nil {
		return err
	}
	if err := AssertRoamingQbcInformationRequired(obj.RoamingQBCInformation); err != nil {
		return err
	}
	return nil
}

// AssertChargingDataResponseConstraints checks if the values respects the defined constraints
func AssertChargingDataResponseConstraints(obj ChargingDataResponse) error {
	if obj.InvocationSequenceNumber < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.InvocationSequenceNumber > 4294967295 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
