/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RoutingAreaId.h
 *
 * Contains a Routing Area Identification as defined in 3GPP TS 23.003, clause 4.2.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RoutingAreaId_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RoutingAreaId_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/PlmnId.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class PlmnId;

/// <summary>
/// Contains a Routing Area Identification as defined in 3GPP TS 23.003, clause 4.2.
/// </summary>
class  RoutingAreaId
    : public ModelBase
{
public:
    RoutingAreaId();
    virtual ~RoutingAreaId();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RoutingAreaId members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PlmnId> getPlmnId() const;
    bool plmnIdIsSet() const;
    void unsetPlmnId();

    void setPlmnId(const std::shared_ptr<PlmnId>& value);

    /// <summary>
    /// Location Area Code
    /// </summary>
    utility::string_t getLac() const;
    bool lacIsSet() const;
    void unsetLac();

    void setLac(const utility::string_t& value);

    /// <summary>
    /// Routing Area Code
    /// </summary>
    utility::string_t getRac() const;
    bool racIsSet() const;
    void unsetRac();

    void setRac(const utility::string_t& value);


protected:
    std::shared_ptr<PlmnId> m_PlmnId;
    bool m_PlmnIdIsSet;
    utility::string_t m_Lac;
    bool m_LacIsSet;
    utility::string_t m_Rac;
    bool m_RacIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RoutingAreaId_H_ */
