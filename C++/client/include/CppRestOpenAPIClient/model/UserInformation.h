/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserInformation.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UserInformation_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UserInformation_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/RoamerInOut.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  UserInformation
    : public ModelBase
{
public:
    UserInformation();
    virtual ~UserInformation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UserInformation members

    /// <summary>
    /// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier&#x3D; \&quot;extid-&#39;extid&#39;, where &#39;extid&#39;  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
    /// </summary>
    utility::string_t getServedGPSI() const;
    bool servedGPSIIsSet() const;
    void unsetServedGPSI();

    void setServedGPSI(const utility::string_t& value);

    /// <summary>
    /// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.  
    /// </summary>
    utility::string_t getServedPEI() const;
    bool servedPEIIsSet() const;
    void unsetServedPEI();

    void setServedPEI(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isUnauthenticatedFlag() const;
    bool unauthenticatedFlagIsSet() const;
    void unsetUnauthenticatedFlag();

    void setUnauthenticatedFlag(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<RoamerInOut> getRoamerInOut() const;
    bool roamerInOutIsSet() const;
    void unsetRoamerInOut();

    void setRoamerInOut(const std::shared_ptr<RoamerInOut>& value);


protected:
    utility::string_t m_ServedGPSI;
    bool m_ServedGPSIIsSet;
    utility::string_t m_ServedPEI;
    bool m_ServedPEIIsSet;
    bool m_UnauthenticatedFlag;
    bool m_UnauthenticatedFlagIsSet;
    std::shared_ptr<RoamerInOut> m_RoamerInOut;
    bool m_RoamerInOutIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UserInformation_H_ */
