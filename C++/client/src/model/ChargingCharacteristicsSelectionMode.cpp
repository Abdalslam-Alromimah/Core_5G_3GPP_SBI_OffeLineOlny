/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/ChargingCharacteristicsSelectionMode.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



ChargingCharacteristicsSelectionMode::ChargingCharacteristicsSelectionMode()
{
}

ChargingCharacteristicsSelectionMode::~ChargingCharacteristicsSelectionMode()
{
}

void ChargingCharacteristicsSelectionMode::validate()
{
    // TODO: implement validation
}

web::json::value ChargingCharacteristicsSelectionMode::toJson() const
{

    web::json::value val = web::json::value::object();
    

    return val;
}

bool ChargingCharacteristicsSelectionMode::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    return ok;
}

void ChargingCharacteristicsSelectionMode::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
}

bool ChargingCharacteristicsSelectionMode::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    return ok;
}

}
}
}
}


