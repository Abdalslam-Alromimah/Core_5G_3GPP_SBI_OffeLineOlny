/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* DefaultApiImpl.h
*
* 
*/

#ifndef DEFAULT_API_IMPL_H_
#define DEFAULT_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <DefaultApi.h>


#include "ChargingDataRequest.h"
#include "ChargingDataResponse.h"
#include "ProblemDetails.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  DefaultApiImpl : public org::openapitools::server::api::DefaultApi {
public:
    explicit DefaultApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~DefaultApiImpl() override = default;

    void offlinechargingdata_offline_charging_data_ref_release_post(const std::string &offlineChargingDataRef, const ChargingDataRequest &chargingDataRequest, Pistache::Http::ResponseWriter &response);
    void offlinechargingdata_offline_charging_data_ref_update_post(const std::string &offlineChargingDataRef, const ChargingDataRequest &chargingDataRequest, Pistache::Http::ResponseWriter &response);
    void offlinechargingdata_post(const ChargingDataRequest &chargingDataRequest, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
