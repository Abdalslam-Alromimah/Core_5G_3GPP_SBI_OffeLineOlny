/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PduSetQosParaRm.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

PduSetQosParaRm::PduSetQosParaRm()
{
    m_PduSetDelayBudget = 0;
    m_PduSetDelayBudgetIsSet = false;
    m_PduSetErrRate = "";
    m_PduSetErrRateIsSet = false;
    m_PduSetHandlingInfoIsSet = false;
    
}

void PduSetQosParaRm::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool PduSetQosParaRm::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool PduSetQosParaRm::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "PduSetQosParaRm" : pathPrefix;

         
    if (pduSetDelayBudgetIsSet())
    {
        const int32_t& value = m_PduSetDelayBudget;
        const std::string currentValuePath = _pathPrefix + ".pduSetDelayBudget";
                
        
        if (value < 1)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 1;";
        }

    }
         
    if (pduSetErrRateIsSet())
    {
        const std::string& value = m_PduSetErrRate;
        const std::string currentValuePath = _pathPrefix + ".pduSetErrRate";
                
        

    }
        
    return success;
}

bool PduSetQosParaRm::operator==(const PduSetQosParaRm& rhs) const
{
    return
    
    
    
    ((!pduSetDelayBudgetIsSet() && !rhs.pduSetDelayBudgetIsSet()) || (pduSetDelayBudgetIsSet() && rhs.pduSetDelayBudgetIsSet() && getPduSetDelayBudget() == rhs.getPduSetDelayBudget())) &&
    
    
    ((!pduSetErrRateIsSet() && !rhs.pduSetErrRateIsSet()) || (pduSetErrRateIsSet() && rhs.pduSetErrRateIsSet() && getPduSetErrRate() == rhs.getPduSetErrRate())) &&
    
    
    ((!pduSetHandlingInfoIsSet() && !rhs.pduSetHandlingInfoIsSet()) || (pduSetHandlingInfoIsSet() && rhs.pduSetHandlingInfoIsSet() && getPduSetHandlingInfo() == rhs.getPduSetHandlingInfo()))
    
    ;
}

bool PduSetQosParaRm::operator!=(const PduSetQosParaRm& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PduSetQosParaRm& o)
{
    j = nlohmann::json::object();
    if(o.pduSetDelayBudgetIsSet())
        j["pduSetDelayBudget"] = o.m_PduSetDelayBudget;
    if(o.pduSetErrRateIsSet())
        j["pduSetErrRate"] = o.m_PduSetErrRate;
    if(o.pduSetHandlingInfoIsSet())
        j["pduSetHandlingInfo"] = o.m_PduSetHandlingInfo;
    
}

void from_json(const nlohmann::json& j, PduSetQosParaRm& o)
{
    if(j.find("pduSetDelayBudget") != j.end())
    {
        j.at("pduSetDelayBudget").get_to(o.m_PduSetDelayBudget);
        o.m_PduSetDelayBudgetIsSet = true;
    } 
    if(j.find("pduSetErrRate") != j.end())
    {
        j.at("pduSetErrRate").get_to(o.m_PduSetErrRate);
        o.m_PduSetErrRateIsSet = true;
    } 
    if(j.find("pduSetHandlingInfo") != j.end())
    {
        j.at("pduSetHandlingInfo").get_to(o.m_PduSetHandlingInfo);
        o.m_PduSetHandlingInfoIsSet = true;
    } 
    
}

int32_t PduSetQosParaRm::getPduSetDelayBudget() const
{
    return m_PduSetDelayBudget;
}
void PduSetQosParaRm::setPduSetDelayBudget(int32_t const value)
{
    m_PduSetDelayBudget = value;
    m_PduSetDelayBudgetIsSet = true;
}
bool PduSetQosParaRm::pduSetDelayBudgetIsSet() const
{
    return m_PduSetDelayBudgetIsSet;
}
void PduSetQosParaRm::unsetPduSetDelayBudget()
{
    m_PduSetDelayBudgetIsSet = false;
}
std::string PduSetQosParaRm::getPduSetErrRate() const
{
    return m_PduSetErrRate;
}
void PduSetQosParaRm::setPduSetErrRate(std::string const& value)
{
    m_PduSetErrRate = value;
    m_PduSetErrRateIsSet = true;
}
bool PduSetQosParaRm::pduSetErrRateIsSet() const
{
    return m_PduSetErrRateIsSet;
}
void PduSetQosParaRm::unsetPduSetErrRate()
{
    m_PduSetErrRateIsSet = false;
}
org::openapitools::server::model::PduSetHandlingInfo PduSetQosParaRm::getPduSetHandlingInfo() const
{
    return m_PduSetHandlingInfo;
}
void PduSetQosParaRm::setPduSetHandlingInfo(org::openapitools::server::model::PduSetHandlingInfo const& value)
{
    m_PduSetHandlingInfo = value;
    m_PduSetHandlingInfoIsSet = true;
}
bool PduSetQosParaRm::pduSetHandlingInfoIsSet() const
{
    return m_PduSetHandlingInfoIsSet;
}
void PduSetQosParaRm::unsetPduSetHandlingInfo()
{
    m_PduSetHandlingInfoIsSet = false;
}


} // namespace org::openapitools::server::model

