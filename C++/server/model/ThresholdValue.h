/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ThresholdValue.h
 *
 * Indicates the threshold value(s) for RTT and/or Packet Loss Rate.
 */

#ifndef ThresholdValue_H_
#define ThresholdValue_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Indicates the threshold value(s) for RTT and/or Packet Loss Rate.
/// </summary>
class  ThresholdValue
{
public:
    ThresholdValue();
    virtual ~ThresholdValue() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ThresholdValue& rhs) const;
    bool operator!=(const ThresholdValue& rhs) const;

    /////////////////////////////////////////////
    /// ThresholdValue members

    /// <summary>
    /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI &#39;nullable: true&#39; property. 
    /// </summary>
    int32_t getRttThres() const;
    void setRttThres(int32_t const value);
    bool rttThresIsSet() const;
    void unsetRttThres();
    /// <summary>
    /// This data type is defined in the same way as the &#39;PacketLossRate&#39; data type, but with the OpenAPI &#39;nullable: true&#39; property. 
    /// </summary>
    int32_t getPlrThres() const;
    void setPlrThres(int32_t const value);
    bool plrThresIsSet() const;
    void unsetPlrThres();

    friend  void to_json(nlohmann::json& j, const ThresholdValue& o);
    friend  void from_json(const nlohmann::json& j, ThresholdValue& o);
protected:
    int32_t m_RttThres;
    bool m_RttThresIsSet;
    int32_t m_PlrThres;
    bool m_PlrThresIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ThresholdValue_H_ */
