/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "LocationAreaId.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

LocationAreaId::LocationAreaId()
{
    m_Lac = "";
    
}

void LocationAreaId::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool LocationAreaId::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool LocationAreaId::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "LocationAreaId" : pathPrefix;

        
    if (!m_PlmnId.validate()) {
        msg << _pathPrefix << ": PlmnId is invalid;";
        success = false;
    }     
    
    /* Lac */ {
        const std::string& value = m_Lac;
        const std::string currentValuePath = _pathPrefix + ".lac";
                
        

    }
    
    return success;
}

bool LocationAreaId::operator==(const LocationAreaId& rhs) const
{
    return
    
    
    (getPlmnId() == rhs.getPlmnId())
     &&
    
    (getLac() == rhs.getLac())
    
    
    ;
}

bool LocationAreaId::operator!=(const LocationAreaId& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const LocationAreaId& o)
{
    j = nlohmann::json::object();
    j["plmnId"] = o.m_PlmnId;
    j["lac"] = o.m_Lac;
    
}

void from_json(const nlohmann::json& j, LocationAreaId& o)
{
    j.at("plmnId").get_to(o.m_PlmnId);
    j.at("lac").get_to(o.m_Lac);
    
}

org::openapitools::server::model::PlmnId LocationAreaId::getPlmnId() const
{
    return m_PlmnId;
}
void LocationAreaId::setPlmnId(org::openapitools::server::model::PlmnId const& value)
{
    m_PlmnId = value;
}
std::string LocationAreaId::getLac() const
{
    return m_Lac;
}
void LocationAreaId::setLac(std::string const& value)
{
    m_Lac = value;
}


} // namespace org::openapitools::server::model

