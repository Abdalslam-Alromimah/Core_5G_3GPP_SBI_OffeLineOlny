/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SteeringMode.h
 *
 * Contains the steering mode value and parameters determined by the PCF.
 */

#ifndef SteeringMode_H_
#define SteeringMode_H_


#include "AccessTypeRm.h"
#include "ThresholdValue.h"
#include "SteerModeValue.h"
#include "AccessType.h"
#include "SteerModeIndicator.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Contains the steering mode value and parameters determined by the PCF.
/// </summary>
class  SteeringMode
{
public:
    SteeringMode();
    virtual ~SteeringMode() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SteeringMode& rhs) const;
    bool operator!=(const SteeringMode& rhs) const;

    /////////////////////////////////////////////
    /// SteeringMode members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::SteerModeValue getSteerModeValue() const;
    void setSteerModeValue(org::openapitools::server::model::SteerModeValue const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AccessType getActive() const;
    void setActive(org::openapitools::server::model::AccessType const& value);
    bool activeIsSet() const;
    void unsetActive();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AccessTypeRm getStandby() const;
    void setStandby(org::openapitools::server::model::AccessTypeRm const& value);
    bool standbyIsSet() const;
    void unsetStandby();
    /// <summary>
    /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
    /// </summary>
    int32_t getR3gLoad() const;
    void setR3gLoad(int32_t const value);
    bool r3gLoadIsSet() const;
    void unsetr_3gLoad();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AccessType getPrioAcc() const;
    void setPrioAcc(org::openapitools::server::model::AccessType const& value);
    bool prioAccIsSet() const;
    void unsetPrioAcc();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::ThresholdValue getThresValue() const;
    void setThresValue(org::openapitools::server::model::ThresholdValue const& value);
    bool thresValueIsSet() const;
    void unsetThresValue();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::SteerModeIndicator getSteerModeInd() const;
    void setSteerModeInd(org::openapitools::server::model::SteerModeIndicator const& value);
    bool steerModeIndIsSet() const;
    void unsetSteerModeInd();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AccessTypeRm getPrimary() const;
    void setPrimary(org::openapitools::server::model::AccessTypeRm const& value);
    bool primaryIsSet() const;
    void unsetPrimary();

    friend  void to_json(nlohmann::json& j, const SteeringMode& o);
    friend  void from_json(const nlohmann::json& j, SteeringMode& o);
protected:
    org::openapitools::server::model::SteerModeValue m_SteerModeValue;

    org::openapitools::server::model::AccessType m_Active;
    bool m_ActiveIsSet;
    org::openapitools::server::model::AccessTypeRm m_Standby;
    bool m_StandbyIsSet;
    int32_t m_r_3gLoad;
    bool m_r_3gLoadIsSet;
    org::openapitools::server::model::AccessType m_PrioAcc;
    bool m_PrioAccIsSet;
    org::openapitools::server::model::ThresholdValue m_ThresValue;
    bool m_ThresValueIsSet;
    org::openapitools::server::model::SteerModeIndicator m_SteerModeInd;
    bool m_SteerModeIndIsSet;
    org::openapitools::server::model::AccessTypeRm m_Primary;
    bool m_PrimaryIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SteeringMode_H_ */
