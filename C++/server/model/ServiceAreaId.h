/**
* Nchf_OfflineOnlyCharging
* OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ServiceAreaId.h
 *
 * Contains a Service Area Identifier as defined in 3GPP TS 23.003, clause 12.5.
 */

#ifndef ServiceAreaId_H_
#define ServiceAreaId_H_


#include <string>
#include "PlmnId.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Contains a Service Area Identifier as defined in 3GPP TS 23.003, clause 12.5.
/// </summary>
class  ServiceAreaId
{
public:
    ServiceAreaId();
    virtual ~ServiceAreaId() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ServiceAreaId& rhs) const;
    bool operator!=(const ServiceAreaId& rhs) const;

    /////////////////////////////////////////////
    /// ServiceAreaId members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::PlmnId getPlmnId() const;
    void setPlmnId(org::openapitools::server::model::PlmnId const& value);
    /// <summary>
    /// Location Area Code.
    /// </summary>
    std::string getLac() const;
    void setLac(std::string const& value);
    /// <summary>
    /// Service Area Code.
    /// </summary>
    std::string getSac() const;
    void setSac(std::string const& value);

    friend  void to_json(nlohmann::json& j, const ServiceAreaId& o);
    friend  void from_json(const nlohmann::json& j, ServiceAreaId& o);
protected:
    org::openapitools::server::model::PlmnId m_PlmnId;

    std::string m_Lac;

    std::string m_Sac;

    
};

} // namespace org::openapitools::server::model

#endif /* ServiceAreaId_H_ */
